package principal;

import conexion.ConexionMysql;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

// Agrega esto en la cabecera de la clase:
private Connection cn;
private String correoUsuario; // Recibe el correo del usuario logueado

public class frmUsuario extends javax.swing.JFrame {

    private Connection cn;
    private String correoUsuario; // El correo del usuario logueado

    public frmUsuario(String correoUsuario) {
        this.correoUsuario = correoUsuario;
        cn = ConexionMysql.conectar();
        initComponents();
        cargarLibrosDisponibles();
        cargarLibrosPrestados();

    btnActualizar.addActionListener(e -> {
        cargarLibrosDisponibles();
        cargarLibrosPrestados();
    });
    btnPrestarLibro.addActionListener(e -> prestarLibro());
    }
    }
private void cargarLibrosDisponibles() {
  DefaultTableModel modelo = (DefaultTableModel) tblLibrosDispo.getModel();
  modelo.setRowCount(0);
  try {
    String sql = "SELECT * FROM libros WHERE id_libro NOT IN (SELECT id_libro FROM prestamos WHERE fecha_devolucion IS NULL)";
    PreparedStatement ps = cn.prepareStatement(sql);
    ResultSet rs = ps.executeQuery();
    while (rs.next()) {
      modelo.addRow(new Object[]{
        rs.getInt("id_libro"),
        rs.getString("nombre"),
        rs.getString("autor"),
        rs.getString("editorial"),
        rs.getInt("paginas"),
        rs.getString("isbn"),
        rs.getString("categoria"),
        rs.getString("fecha_publi"),
        rs.getDouble("precio")
      });
    }
  } catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al cargar libros disponibles: " + e.getMessage());
  }
}


private void cargarLibrosPrestados() {
  DefaultTableModel modelo = (DefaultTableModel) tblLibrosPrestados.getModel();
  modelo.setRowCount(0);
  try {
    String sql = "SELECT l.* FROM libros l INNER JOIN prestamos p ON l.id_libro = p.id_libro WHERE p.correo_usuario = ? AND p.fecha_devolucion IS NULL";
    PreparedStatement ps = cn.prepareStatement(sql);
    ps.setString(1, correoUsuario);
    ResultSet rs = ps.executeQuery();
    while (rs.next()) {
      modelo.addRow(new Object[]{
        rs.getInt("id_libro"),
        rs.getString("nombre"),
        rs.getString("autor"),
        rs.getString("editorial"),
        rs.getInt("paginas"),
        rs.getString("isbn"),
        rs.getString("categoria"),
        rs.getString("fecha_publi"),
        rs.getDouble("precio")
      });
    }
  } catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al cargar libros prestados: " + e.getMessage());
  }
}


private void prestarLibro() {
  int fila = tblLibrosDispo.getSelectedRow();
  if (fila == -1) {
    JOptionPane.showMessageDialog(this, "Selecciona un libro para prestar.");
    return;
  }
  DefaultTableModel modelo = (DefaultTableModel) tblLibrosDispo.getModel();
  int idLibro = (int) modelo.getValueAt(fila, 0);

  try {
    String sql = "INSERT INTO prestamos (correo_usuario, id_libro, fecha_prestamo) VALUES (?, ?, CURDATE())";
    PreparedStatement ps = cn.prepareStatement(sql);
    ps.setString(1, correoUsuario);
    ps.setInt(2, idLibro);
    ps.executeUpdate();
    JOptionPane.showMessageDialog(this, "Libro prestado correctamente.");
    cargarLibrosDisponibles();
    cargarLibrosPrestados();
  } catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al prestar libro: " + e.getMessage());
  }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibrosDispo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLibrosPrestados = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnPrestarLibro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        tblLibrosDispo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_libro", "Nombre", "Autor", "Editorial", "Paginas", "ISBN", "Cateogria", "Fecha_publi", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLibrosDispo);

        tblLibrosPrestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_libro", "Nombre", "Autor", "Editorial", "Paginas", "ISBN", "Categoria", "Fecha_publi", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblLibrosPrestados);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnPrestarLibro.setText("Prestar Libro");
        btnPrestarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestarLibroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPrestarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnPrestarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnPrestarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestarLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrestarLibroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnPrestarLibro;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblLibrosDispo;
    private javax.swing.JTable tblLibrosPrestados;
    // End of variables declaration//GEN-END:variables
}
